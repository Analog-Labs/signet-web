name: Build Docker images

on:
  push:
    branches:
      - "main"

jobs:
  set-tags:
    name: Get & set tags
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get-sha.outputs.sha }}
      commit_hash8: ${{ steps.get-sha.outputs.sha8 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get SHA
        id: get-sha
        run: |
          sha=$(git log -1 --format='%H')
          echo "sha=$sha" >> $GITHUB_OUTPUT
          echo "sha8=$(git log -1 --format='%H' | cut -c1-8)" >> $GITHUB_OUTPUT
          echo "SHA commit:" $sha

  build-signet:
    name: Build Signet webapp image
    strategy:
      matrix:
        include:
          - imageName: signet-parity-mainnet
            networks: 'polkadot,kusama,polkadot-asset-hub,kusama-asset-hub'
            hasuraUrl: 'https://signet-metadata.talisman.xyz'
            siwsUrl: 'https://signet-metadata.talisman.xyz/siws'
          - imageName: signet-parity-testnet
            networks: 'rococo-testnet,paseo-testnet'
            hasuraUrl: 'https://signet-metadata.talisman.xyz'
            siwsUrl: 'https://signet-metadata.talisman.xyz/siws'
    runs-on: ubuntu-latest
    needs: ['set-tags']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker env init
        uses: ./.github/actions/ecr-common
        with:
          registry_root: ${{ secrets.REGISTRY_ROOT }}
          registry_username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          registry_password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and push Signet webapp
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          build-args: |
            HASURA_ENDPOINT=${{ matrix.hasuraUrl }}
            SIWS_ENDPOINT=${{ matrix.siwsUrl }}
            NETWORKS=${{ matrix.networks }}
          tags: |
            ${{ secrets.REGISTRY_ROOT }}/${{ matrix.imageName }}:${{ needs.set-tags.outputs.commit_hash8 }}
            ${{ secrets.REGISTRY_ROOT }}/${{ matrix.imageName }}:latest
          file: apps/multisig/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
